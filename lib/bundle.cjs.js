"use strict";var t=require("zod");require("reflect-metadata");var e=require("tsyringe");const n=(t,n)=>{const r=`${n}:functionId`;return e.container.registerInstance(r,t),e.container.resolve(n)},r=t=>{const e={};for(const[r,o]of Object.entries(t)){const t=n(r,o);e[r]=t.execute.bind(t)}return e};const o=(t,n)=>{const r=`${n}:functionId`;return e.container.registerInstance(r,t),e.container.resolve(n)},c=t=>{const e={};for(const[n,r]of Object.entries(t)){const t=o(n,r);e[n]=t.getPromptResult.bind(t)}return e};const s=t.z.record(t.z.object({function:t.z.string().optional(),prompt:t.z.string().optional()})),i=t.z.record(s),p=t.z.custom((t=>"function"==typeof t||t instanceof Function),{message:"Expected a function"}),a=t.z.record(t.z.object({function:t.z.record(p),prompt:t.z.record(p)}));exports.GeneralFunction=class{constructor(t){this.functionId=t}},exports.GeneralPrompt=class{constructor(t){this.functionId=t}},exports.createContexts=e=>{const n=t.z.object({functionMap:t.z.record(t.z.string()),promptsMap:t.z.record(t.z.string())});let o={};return Object.entries(e).forEach((([t,e])=>{const{functionMap:s,promptsMap:i}=(p=e,Object.entries(p).reduce(((t,[e,r])=>n.parse({functionMap:{...t.functionMap,...r.function?{[e]:r.function}:{}},promptsMap:{...t.promptsMap,...r.prompt?{[e]:r.prompt}:{}}})),n.parse({functionMap:{},promptsMap:{}})));var p;o={...o,[t]:{function:Object.keys(s).length>0?r(s):{},prompt:Object.keys(i).length>0?c(i):{}}}})),a.parse(o)},exports.createFunctions=r,exports.createPrompts=c,exports.serverConfigSchema=i;
//# sourceMappingURL=bundle.cjs.js.map
